{
  "stats": {
    "suites": 1,
    "tests": 19,
    "passes": 11,
    "pending": 0,
    "failures": 8,
    "start": "2024-01-18T20:48:53.613Z",
    "end": "2024-01-18T20:49:14.188Z",
    "duration": 20435,
    "testsRegistered": 19,
    "passPercent": 57.89473684210526,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3413f0e7-69a2-43a6-8a87-cf2ad299a58a",
      "title": "",
      "fullFile": "cypress/integration/jsPromisesPracticeDOM.spec.js",
      "file": "cypress/integration/jsPromisesPracticeDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc44ee0a-3bf1-4c35-aa4f-5ce7fdfe890e",
          "title": "Promises in DOM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
              "title": "firstPromise",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be neither resolved nor rejected on page render",
                  "fullTitle": "Promises in DOM firstPromise should be neither resolved nor rejected on page render",
                  "timedOut": null,
                  "duration": 4293,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "page.notification().should('not.include.text', firstResolvedMsg);\npage.notification().should('not.include.text', firstRejectedMsg);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsPromisesPracticeDOM.spec.js:114:27)",
                    "diff": null
                  },
                  "uuid": "5bb3f593-951b-4031-96fc-8317ba80b96a",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved after the left click",
                  "fullTitle": "Promises in DOM firstPromise should be resolved after the left click",
                  "timedOut": null,
                  "duration": 213,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\npage.notification().should('include.text', firstResolvedMsg);",
                  "err": {},
                  "uuid": "fb94e758-3fe4-469b-af5a-8502e9112177",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be rejected after 3 seconds of inactivity",
                  "fullTitle": "Promises in DOM firstPromise should be rejected after 3 seconds of inactivity",
                  "timedOut": null,
                  "duration": 261,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.tick(3000);\npage.notification().should('include.text', firstRejectedMsg);",
                  "err": {
                    "message": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                    "estack": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError\n",
                    "diff": null
                  },
                  "uuid": "20df8e72-e2ea-4c83-9751-63bfd365b735",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show reject message if it was already resolved",
                  "fullTitle": "Promises in DOM firstPromise should not show reject message if it was already resolved",
                  "timedOut": null,
                  "duration": 188,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\ncy.tick(3000);\npage.notification().should('not.include.text', firstRejectedMsg);",
                  "err": {},
                  "uuid": "c427dcdc-b816-484c-ae0e-b21fa9adc1f3",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved after the left click on 2999 millisecond",
                  "fullTitle": "Promises in DOM firstPromise should be resolved after the left click on 2999 millisecond",
                  "timedOut": null,
                  "duration": 172,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.tick(2999);\npage.body().click();\npage.notification().should('include.text', firstResolvedMsg);",
                  "err": {},
                  "uuid": "514cccf7-9da0-430c-b516-1979777ebc62",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be rejected after 2999 milliseconds of inactivity",
                  "fullTitle": "Promises in DOM firstPromise should not be rejected after 2999 milliseconds of inactivity",
                  "timedOut": null,
                  "duration": 4240,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.tick(2999);\npage.notification().should('not.include.text', firstRejectedMsg);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsPromisesPracticeDOM.spec.js:137:27)",
                    "diff": null
                  },
                  "uuid": "57bed9bd-d1e6-429f-9525-c92e3cf27fd9",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show resolve message if it was already rejected",
                  "fullTitle": "Promises in DOM firstPromise should not show resolve message if it was already rejected",
                  "timedOut": null,
                  "duration": 254,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.tick(3000);\npage.body().click();\npage.notification().should('not.include.text', firstResolvedMsg);",
                  "err": {
                    "message": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                    "estack": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError\n",
                    "diff": null
                  },
                  "uuid": "7f4f239a-51f0-446a-b939-3e53b67b450d",
                  "parentUUID": "0d56f0d8-f2e8-4bb9-b96b-4a48f5a36b11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb94e758-3fe4-469b-af5a-8502e9112177",
                "c427dcdc-b816-484c-ae0e-b21fa9adc1f3",
                "514cccf7-9da0-430c-b516-1979777ebc62"
              ],
              "failures": [
                "5bb3f593-951b-4031-96fc-8317ba80b96a",
                "20df8e72-e2ea-4c83-9751-63bfd365b735",
                "57bed9bd-d1e6-429f-9525-c92e3cf27fd9",
                "7f4f239a-51f0-446a-b939-3e53b67b450d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 9621,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "362b9436-03b1-4313-ac5b-aebcb3112e9a",
              "title": "secondPromise",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not be resolved on page render",
                  "fullTitle": "Promises in DOM secondPromise should not be resolved on page render",
                  "timedOut": null,
                  "duration": 4241,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "page.notification().should('not.include.text', secondResolvedMsg);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsPromisesPracticeDOM.spec.js:147:27)",
                    "diff": null
                  },
                  "uuid": "ea531f49-340a-4db5-a805-5aa61707f65f",
                  "parentUUID": "362b9436-03b1-4313-ac5b-aebcb3112e9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved after the left click",
                  "fullTitle": "Promises in DOM secondPromise should be resolved after the left click",
                  "timedOut": null,
                  "duration": 170,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\npage.notification().should('include.text', secondResolvedMsg);",
                  "err": {},
                  "uuid": "4c0f2a7e-01e9-4be2-bc62-1f7e2d9fd154",
                  "parentUUID": "362b9436-03b1-4313-ac5b-aebcb3112e9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved after the right click",
                  "fullTitle": "Promises in DOM secondPromise should be resolved after the right click",
                  "timedOut": null,
                  "duration": 161,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().rightclick();\npage.notification().should('include.text', secondResolvedMsg);",
                  "err": {},
                  "uuid": "7b7205b4-370c-4db6-9fa4-64446e564d49",
                  "parentUUID": "362b9436-03b1-4313-ac5b-aebcb3112e9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be resolved without clicks after delay",
                  "fullTitle": "Promises in DOM secondPromise should not be resolved without clicks after delay",
                  "timedOut": null,
                  "duration": 254,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.tick(100000);\npage.notification().should('not.include.text', secondResolvedMsg);",
                  "err": {
                    "message": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                    "estack": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError\n",
                    "diff": null
                  },
                  "uuid": "48748164-3c2e-47a0-bf51-57648a028f6c",
                  "parentUUID": "362b9436-03b1-4313-ac5b-aebcb3112e9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c0f2a7e-01e9-4be2-bc62-1f7e2d9fd154",
                "7b7205b4-370c-4db6-9fa4-64446e564d49"
              ],
              "failures": [
                "ea531f49-340a-4db5-a805-5aa61707f65f",
                "48748164-3c2e-47a0-bf51-57648a028f6c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4826,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
              "title": "thirdPromise",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not be resolved on page render",
                  "fullTitle": "Promises in DOM thirdPromise should not be resolved on page render",
                  "timedOut": null,
                  "duration": 4237,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "page.notification().should('not.include.text', thirdResolvedMsg);",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-qa=notification]`, but never found it.\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress\\integration\\jsPromisesPracticeDOM.spec.js:164:27)",
                    "diff": null
                  },
                  "uuid": "8f8b720b-abc4-4036-9128-af9dd7c7bf0a",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved after the left and right click",
                  "fullTitle": "Promises in DOM thirdPromise should be resolved after the left and right click",
                  "timedOut": null,
                  "duration": 250,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\npage.body().rightclick();\npage.notification().should('include.text', thirdResolvedMsg);",
                  "err": {},
                  "uuid": "2557afbd-6ae5-406b-847a-881847d4d051",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved after the right and left click",
                  "fullTitle": "Promises in DOM thirdPromise should be resolved after the right and left click",
                  "timedOut": null,
                  "duration": 273,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().rightclick();\npage.body().click();\npage.notification().should('include.text', thirdResolvedMsg);",
                  "err": {},
                  "uuid": "37dcaade-cedc-4daf-a825-8a3f1265e798",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be resolved despite the delay between the left and right click",
                  "fullTitle": "Promises in DOM thirdPromise should be resolved despite the delay between the left and right click",
                  "timedOut": null,
                  "duration": 267,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\ncy.tick(100000);\npage.body().rightclick();\npage.notification().should('include.text', thirdResolvedMsg);",
                  "err": {},
                  "uuid": "e191bad9-7276-4a2f-be69-8cf7fdaabc92",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be resolved after the left click only",
                  "fullTitle": "Promises in DOM thirdPromise should not be resolved after the left click only",
                  "timedOut": null,
                  "duration": 180,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\npage.notification().should('not.include.text', thirdResolvedMsg);",
                  "err": {},
                  "uuid": "c9685296-4bd3-4609-9cad-e19f981de764",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be resolved after the right click only",
                  "fullTitle": "Promises in DOM thirdPromise should not be resolved after the right click only",
                  "timedOut": null,
                  "duration": 180,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().rightclick();\npage.notification().should('not.include.text', thirdResolvedMsg);",
                  "err": {},
                  "uuid": "4a631474-f149-4da5-8b5e-a24be37ff845",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be resolved without clicks after delay",
                  "fullTitle": "Promises in DOM thirdPromise should not be resolved without clicks after delay",
                  "timedOut": null,
                  "duration": 272,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.tick(100000);\npage.notification().should('not.include.text', thirdResolvedMsg);",
                  "err": {
                    "message": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application",
                    "estack": "CypressError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError: The following error originated from your application code, not from Cypress. It was caused by an unhandled promise rejection.\n\n  > \n\nWhen Cypress detects uncaught errors originating from your application it will automatically fail the current test.\n\nThis behavior is configurable, and you can choose to turn this off by listening to the `uncaught:exception` event.\n\nhttps://on.cypress.io/uncaught-exception-from-application\nError\n",
                    "diff": null
                  },
                  "uuid": "e8bb44ff-a691-4746-9607-caae3964d67e",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not be resolved after several left clicks",
                  "fullTitle": "Promises in DOM thirdPromise should not be resolved after several left clicks",
                  "timedOut": null,
                  "duration": 329,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "page.body().click();\npage.body().click();\npage.body().click();\npage.notification().should('not.include.text', thirdResolvedMsg);",
                  "err": {},
                  "uuid": "151f7aef-d41d-4d45-b626-62dd174bc5f9",
                  "parentUUID": "1626be8c-cd7e-47b8-92ad-16267cffae4a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2557afbd-6ae5-406b-847a-881847d4d051",
                "37dcaade-cedc-4daf-a825-8a3f1265e798",
                "e191bad9-7276-4a2f-be69-8cf7fdaabc92",
                "c9685296-4bd3-4609-9cad-e19f981de764",
                "4a631474-f149-4da5-8b5e-a24be37ff845",
                "151f7aef-d41d-4d45-b626-62dd174bc5f9"
              ],
              "failures": [
                "8f8b720b-abc4-4036-9128-af9dd7c7bf0a",
                "e8bb44ff-a691-4746-9607-caae3964d67e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5988,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}