{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","createFirstPromise","Promise","resolve","reject","onclick","setTimeout","createSecondPromise","addEventListener","then","insertAdjacentHTML","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,IAMA,OAAA,IAAIC,QALM,SAASC,EAASC,GACjCN,EAAKO,QAAU,WAAMF,OAAAA,KACrBG,WAAW,WAAMF,OAAAA,KAAU,OAM/B,SAASG,IAMA,OAAA,IAAIL,QALM,SAACC,EAASC,GACzBL,SAASS,iBAAiB,QAASL,GACnCJ,SAASS,iBAAiB,cAAeL,KA+B7CF,IAAqBQ,KAAK,WAAMX,OAAAA,EAAKY,mBAAmB,aAA9B,4FAIvBC,MAAM,WAAMb,OAAAA,EAAKY,mBAAmB,aAA9B,gGAKTH,IAAsBE,KAAK,WAAMX,OAAAA,EAAKY,mBAAmB,aAA9B","file":"main.f9755865.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction createFirstPromise() {\n  const resolver = function(resolve, reject) {\n    body.onclick = () => resolve();\n    setTimeout(() => reject(), 3000);\n  };\n\n  return new Promise(resolver);\n}\n\nfunction createSecondPromise() {\n  const resolver = (resolve, reject) => {\n    document.addEventListener('click', resolve);\n    document.addEventListener('contextmenu', resolve);\n  };\n\n  return new Promise(resolver);\n}\n\n// function createThirdPromise() {\n//   const resolver = (resolve, reject) => {\n//     let isRightClicked = false;\n//     let isLeftClicked = false;\n\n//     document.addEventListener('click', () => {\n//       if (isRightClicked) {\n//         resolve();\n//       }\n\n//       isLeftClicked = true;\n//     });\n\n//     document.addEventListener('contextmenu', () => {\n//       if (isLeftClicked) {\n//         resolve();\n//       }\n\n//       isRightClicked = true;\n//     });\n//   };\n\n//   return new Promise(resolver);\n// }\n\ncreateFirstPromise().then(() => body.insertAdjacentHTML('afterBegin',\n  `<div class=\"success\" data-qa=\"notification\">\n    First promise was resolved\n  </div>`))\n  .catch(() => body.insertAdjacentHTML('afterBegin',\n    `<div class=\"warning\" data-qa=\"notification\">\n      First promise was rejected\n    </div>`));\n\ncreateSecondPromise().then(() => body.insertAdjacentHTML('afterBegin',\n  `<div class=\"success\" data-qa=\"notification\">\n    Second promise was resolved\n  </div>`));\n\n// createThirdPromise().then(() => body.insertAdjacentHTML('afterBegin',\n//   `<div class=\"success\" data-qa=\"notification\">\n//     Third promise was resolved\n//   </div>`));\n"]}